# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool: 
  name: Default

variables:
  buildConfiguration: 'Release'

stages:
  - stage:
    displayName: Build .NET application
    jobs:
      - job:
        displayName: Build Job
        steps:
          - task: UseDotNet@2
            displayName: 'Install .NET Core SDK'
            inputs:
              version: 7.x
              performMultiLevelLookup: true
              includePreviewVersions: true

          - task: DotNetCoreCLI@2
            displayName: Build Website
            inputs:
              command: build
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration)'
          
          - task: DotNetCoreCLI@2
            displayName: Create Artifacts
            inputs:
              command: publish
              publishWebProjects: True
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: True

          # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
          - task: PublishPipelineArtifact@1
            displayName: Upload Artifacts
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)' 
              artifactName: 'Server'
          
          - task: AzureRmWebAppDeployment@4
            displayName: Deploy Test Wesbite
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'my_azure_subscription'
              appType: 'webApp'
              WebAppName: 'mf-videoflashcards-test'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'
    
  - stage:
    displayName: Run Test
    jobs:
      - job:
        displayName: Tests Job
        steps:
          - task: DotNetCoreCLI@2
            displayName: Integration Tests
            inputs:
              command: test
              projects: '**/*Tests/*.csproj'
              arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
         
          - task: CmdLine@2
            displayName: Deployment Tests
            inputs:
              script: 'curl https://mf-videoflashcards-test.azurewebsites.net/Users/test | findstr "200 OK"'
